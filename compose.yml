services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - '2181:2181'

  kafka:
    image: wurstmeister/kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    healthcheck:
      test: ['CMD', 'kafka-topics.sh', '--list', '--bootstrap-server', 'localhost:9092']
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      zookeeper:
        condition: service_started

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: ares_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    depends_on:
      - zookeeper

  data-ingestion:
    build: ./backend/data-ingestion
    ports:
      - '8001:8001'
    depends_on:
      kafka:
        condition: service_healthy
        restart: true
    environment:
      KAFKA_BROKER: kafka:9092

  analysis:
    build: ./backend/analysis
    ports:
      - '8002:8002'
    depends_on:
      kafka:
        condition: service_healthy
        restart: true
      postgres:
        condition: service_started

  frontend:
    build: ./frontend
    ports:
      - '80:80'
    depends_on:
      data-ingestion:
        condition: service_started
      analysis:
        condition: service_started

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - node-exporter
      - data-ingestion
      - analysis
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - '9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    ports:
      - '9308:9308'
    environment:
      KAFKA_BROKERS: 'kafka:9092'
    depends_on:
      kafka:
        condition: service_healthy
        restart: true

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - '9187:9187'
    environment:
      DATA_SOURCE_NAME: 'postgresql://postgres:root@postgres:5432/ares_db?sslmode=disable'
    depends_on:
      - postgres

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '3000:3000'
    environment:
      GF_SECURITY_ADMIN_PASSWORD: root
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  node_exporter:
  postgres_data:
